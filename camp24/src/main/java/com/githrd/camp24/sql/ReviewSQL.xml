<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
/**
 * 이 클래스는 리뷰게시판 관련 요청을 처리할 클래스
 * @author	정선우
 * @since	2022.06.22
 * @version	v.1.0
 * 
 * 			작업이력 ]
 
 * 				2022.06.22	-	담당자 : 정선우
 * 									클래스 제작
 *
 */
-->

<mapper namespace="rSQL">
	<!-- 총 게시글 수 -->
	<select id="getTotal" resultType="int">
		SELECT
		    COUNT(*)
		FROM
		    review
		WHERE
		    isshow = 'Y'
	</select>
	<!-- 글쓰기 폼 보기 조회 질의명령 -->
	<select id="getWriteInfo" resultType="bVO" parameterType="string">
		SELECT
			mno, id, savename avatar
		FROM
			member, avatar
		WHERE
			avt = ano
			AND id = #{id}
	</select>
	<!-- 게시글 리스트 조회 질의명령 -->
	<select id="getList" resultType="bVO" parameterType="page">
		SELECT
			rowno, rno, id, cname, body, title, fdate, fedate, click, likecount, score, avatar
		FROM
			(
			 SELECT
			     ROWNUM rowno, rno, id, cname, body, title, fdate, fedate, click, likecount, score, avatar
			 FROM
			     (
			         SELECT
			             rno, id, cname, rbody body, rtitle title, rdate fdate, redate fedate, click, likecount, score, savename avatar
			         FROM
			             member m, review r, avatar a
			         WHERE
			             r.isshow = 'Y'
			             AND mno = rmno
			             AND avt = ano
			         ORDER BY
			             rdate DESC
			     )
			 )
		WHERE
			rowno BETWEEN #{startCont} AND #{endCont}
	</select>
	<!-- 글번호로 리뷰 상세보기 질의명령 -->
	<select id="reviewDetail" resultType="bVO" parameterType="int">
		SELECT
		    rno, id, a.savename avatar, cname, rtitle, rbody, rdate fdate, redate fedate, click, score
		FROM
		    review r, member m, avatar a
		WHERE
		    rmno = mno
		    AND ano = avt
		    AND r.isshow = 'Y'
		    AND rno = #{rno}
	</select>
	<!-- 이미지 리스트 조회 질의명령 -->
	<select id="imgList" resultType="fVO">
		SELECT
		    rno, ino, imageno, isavename, idir
		FROM
		    review r, image i
		WHERE
		    r.isshow = 'Y'
		    AND i.isshow = 'Y'
		    AND imageno = rno
	</select>
	<select id="imgList2" resultType="fVO" parameterType="int">
		SELECT
		    rno, ino, ioriname, isavename, idir
		FROM
		    review r, image i
		WHERE
		    r.isshow = 'Y'
		    AND i.isshow = 'Y'
		    AND rno = #{rno}
		    AND imageno = rno
	</select>
	<!-- 리뷰 등록 질의명령 -->
	<insert id="insertReview" parameterType="bVO">
		<selectKey keyProperty="rno" resultType="int" order="BEFORE">
			SELECT
				NVL(MAX(rno) + 1, 100001)
			FROM
				review
		</selectKey>
		INSERT INTO
		    review(rno, rbody, rmno, rtitle, score, cname)
		VALUES(
		    #{rno}, #{rbody},
		    (SELECT mno FROM member WHERE id = #{id}),
		    #{rtitle},
		    #{score},
		    #{cname}
		)
	</insert>
	<!-- 이미지 등록 질의명령 -->
	<insert id="insertImage" parameterType="fVO">
		<selectKey keyProperty="ino" resultType="int" order="BEFORE">
			SELECT
				NVL(MAX(ino) + 1, 100001)
			FROM
				image
		</selectKey>
		INSERT INTO
		    image(ino, imageno, ioriname, isavename, idir, ilen, icode)
		VALUES(
		    #{ino}, #{rno}, #{ioriname}, #{isavename}, #{idir}, #{ilen}, 'R'
		)
	</insert>
	<!-- 첨부파일 삭제 처리 질의명령 -->
	<update id="delFile" parameterType="int">
		UPDATE
			image
		SET
			isshow = 'N'
		WHERE
			ino = #{ino}
	</update>
	<!-- 게시글 수정 질의명령 -->
	<update id="editBoard" parameterType="bVO">
		UPDATE
			review
		<set>
			<if test="rtitle neq null">
				rtitle = #{rtitle},
			</if>
			<if test="rbody neq null">
				rbody = #{rbody},
			</if>
			<if test="score neq null">
				score = #{score},
			</if>
		</set>
		WHERE
			rno = #{rno}
	</update>
	<!-- 게시글 삭제 질의명령 -->
	<update id="delBoard" parameterType="int">
		UPDATE
			review
		SET
			isshow = 'N'
		WHERE
			rno = #{rno}
	</update>
	
	<!-- 조회수 -->
	<update id="clickUp" parameterType="int">
		UPDATE
		    review
		SET
		    click = click + 1
		WHERE
		    rno = #{rno}
	</update>
	
	<!-- 게시글 추천수 -->
	<update id="updateLike" parameterType="int">
		UPDATE
			review
		SET
			likecount = likecount + 1
		WHERE
			rno = #{rno}
	</update>
	<!-- 게시글 추천수 취소 -->
	<update id="updateLikeCancel" parameterType="int">
		UPDATE
			review
		SET
			likecount = likecount - 1
		WHERE
			rno = #{rno}
	</update>
	<!-- 게시글 추천시 Like 테이블에 insert -->
	<insert id="insertLike">
		INSERT INTO
			clicklike(like_id, like_rno)
		VALUES(
			#{id}, #{rno}
		)
	</insert>
	<!-- 게시글 추천 취소시 delete -->
	<delete id="deleteLike">
		DELETE FROM
			clicklike
		WHERE
			like_rno = #{rno}
			AND like_id = #{id}
	</delete>
	<!-- 중복체크 -->
	<update id="updateLikeCheck">
		UPDATE
			clicklike
		SET
			likecheck = 1
		WHERE
			like_rno = #{rno}
			AND like_id = #{id}
	</update>
	<!-- 게시글 추천취소 시 다시 0 -->
	<update id="updateLikeCheckCancel">
		UPDATE
			clicklike
		SET
			likecheck = 0
		WHERE
			like_rno = #{rno}
			AND like_id = #{id}
	</update>
	<!-- 게시글 추천 중복방지 select -->
	<select id="likeCheck" resultType="int">
		SELECT
			COUNT(*) cnt
		FROM
			clicklike
		WHERE
			like_rno = #{rno}
			AND like_id = #{id}
	</select>
	
	<!-- 
	<select id="likeCnt" resultType="bVO" parameterType="bVO">
		SELECT
			COUNT(*) cnt
		FROM
			clicklike c, member m, review r
		WHERE
		    like_id = m.id
   			AND like_rno = r.rno
			AND like_id = #{id}
			AND like_rno = #{rno}
	</select>
	
	<insert id="insertLike" parameterType="bVO">
		INSERT INTO
		    clicklike
		VALUES(
		    #{id}, #{rno}
		)
	</insert>
	
	<update id="likeUp" parameterType="bVO">
		UPDATE
		    review
		SET
		    likecount = likecount + 1
		WHERE
		    rno = #{rno}
	</update>
	<update id="likeDown" parameterType="bVO">
		UPDATE
		    review
		SET
		    likecount = likecount - 1
		WHERE
		    rno = #{rno}
	</update> 
	-->
</mapper>